import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.security.Key;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.bind.DatatypeConverter;
public class Main {

    public static byte[] b(String string, byte[] byArray) throws Exception {
        int n;
        ByteBuffer byteBuffer;
        block4: {
            byteBuffer = ByteBuffer.wrap(byArray);
            n = byteBuffer.getInt();
            if (n >= 12 && n <= 16) break block4;
            throw new IllegalArgumentException("Nonce size is incorrect. Make sure that the incoming data is an AES encrypted file.");
        }
        byte[] byArray2 = new byte[n];
        byteBuffer.get(byArray2);
        SecretKey secretKey = a(string, byArray2);
        byte[] byArray3 = new byte[byteBuffer.remaining()];
        byteBuffer.get(byArray3);
        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
        IvParameterSpec ivParameterSpec = new IvParameterSpec(byArray2);
        cipher.init(2, (Key)secretKey, ivParameterSpec);
        return cipher.doFinal(byArray3);

    }

    public static SecretKey a(String string, byte[] byArray) throws Exception {
        PBEKeySpec pBEKeySpec = new PBEKeySpec(string.toCharArray(), byArray, 65536, 128);
        SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA1");
        byte[] byArray2 = secretKeyFactory.generateSecret(pBEKeySpec).getEncoded();
        return new SecretKeySpec(byArray2, "AES");
    }


    public static void main(String[] args) throws Exception {
        boolean b1 = true;
        InputStream inputStream = Main.class.getResourceAsStream("config.txt");
        StringBuilder stringBuilder = new StringBuilder();
        byte[] byArray = new byte[1024];
        do {
            int n;
            if ((n = inputStream.read(byArray,0,byArray.length)) == -1) {
                inputStream.close();
                if(!b1) break;
            }
            stringBuilder.append(new String(byArray,0,n));
        } while(!b1);
        byte[] byArray2 = DatatypeConverter.parseBase64Binary((String) stringBuilder.toString());
        byte[] byArray3 = b("strigoi", byArray2);
        String string = new String(byArray3, "UTF-8");
        System.out.println(string.split("\\|"));
        //79.110.62.41|7205|http://jbfrost.live/strigoi/server/?hwid=1&lid=m&ht=5|127.0.0.1|7205|true|true|true|0EHD-YGMT-QM81-RD7S-07I6

    }
}
